/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 demi.glb --transform --types
Files: demi.glb [18.59MB] > C:\Users\danik\WebstormProjects\next-app\demi-transformed.glb [407.79KB] (98%)
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Demi_Figurine_Baked: THREE.Mesh;
  };
  materials: {
    ["Demi Figurine_Baked"]: THREE.MeshStandardMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/demi.glb") as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Demi_Figurine_Baked.geometry}
        material={materials["Demi Figurine_Baked"]}
        position={[-0.002, 1.747, 0.054]}
        rotation={[Math.PI, 0, Math.PI]}
      />
    </group>
  );
}

useGLTF.preload("/demi.glb");
